import sys
 
 
def dp(i,j,N,M):
    if path[i][j]>0:
        return
    path[i][j]=0
    if i>0 and map[i-1][j]>map[i][j]:
        if path[i-1][j]<0:
            dp(i-1,j,N,M)
        path[i][j]+=path[i-1][j]

    if i<N-1 and map[i+1][j]>map[i][j]:
        if path[i+1][j]<0:
            dp(i+1,j,N,M)
        path[i][j]+=path[i+1][j]

    if j>0 and map[i][j-1]>map[i][j]:
        if path[i][j-1]<0:
            dp(i,j-1,N,M)
        path[i][j]+=path[i][j-1]

    if j<M-1 and map[i][j+1]>map[i][j]:
        if path[i][j+1]<0:
            dp(i,j+1,N,M)
        path[i][j]+=path[i][j+1]
 
 
 
 
N,M=map(int,sys.stdin.readline().split())
 
map=[list(map(int,sys.stdin.readline().split())) for _ in range(N)]
 
path=[[-1 for _ in range(M)] for _ in range(N)]
path[0][0]=1
 
for i in range(N):
    for j in range(M):
        dp(i,j,N,M)
 
print(path[-1][-1])
